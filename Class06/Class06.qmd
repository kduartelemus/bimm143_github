---
title: "R Functions"
author: "Keilyn Duarte (PID 16881868)"
format: pdf
---

We call functions to do all our work. Today we will get more exposure to functions in R and learn how to write our own. 

## A first silly function

Note that arguments 2 and 3 have default values (because we set y=0 and z=0) so we don't have to supply them when we call our function.

```{r}
add <- function(x,y=0, z=0) {
  x+y+z
}
```

Can I just use this? 
```{r}
add(1,1)
add(1, c(10,100))
```



```{r}
add(100)
```

```{r}
add(100,10,1)
```

## A second, more fun function

Let's write a function that generates random nucleotide sequences.

We can make use of the in-built `sample()` function in R to help us here.

```{r}
sample(x=1:10, size=1)
```

```{r}
sample(x=1:10, size=11, replace=TRUE)
```

> Q. Can you use `sample()` to generate a random nucleotide sequence of length 5.

```{r}
sample(x=c("A","C","T","G"), size=5, replace=TRUE)
```

> Q. Generate a function `generate_dna()` that makes a nucleotide sequence of a user specified length.

Every function in R has at least 3 things:

- A **name** (in our case "generate_dna")
- One or more **input arguments** (the "length" of sequence we want)
- A **body** (R code that does the work)

```{r}
generate_dna <- function(length=5) {
  sample(x=c("A","T","C","G"), size=length, replace=T)
}
```

```{r}
generate_dna(10)
```

> Q. Can you write a `generate_protein()` function that returns an amino acid sequence of a user requested length?

```{r}
aa <- c("A","R","N","D","C","Q","E","G","H","I","L","K","M","F","P","S","T","W","Y","V")

generate_protein <- function(length=5) {
  sample(x=aa, size=length, replace=T)
}
```

```{r}
generate_protein(20)
```

I want my output of this function to not be a vector with one amino acid per element, but rather a one element single string.

```{r}
bases <- c("A","T","C","G")
paste(bases, collapse="")
```

```{r}
generate_protein <- function(length=5) {
  s <- sample(x=aa, size=length, replace=T)
  paste(s, collapse="")
}
```

```{r}
generate_protein()
```

> Q. Generate protein sequences from legnth 6 to 12

```{r}
generate_protein(6)
generate_protein(7)
generate_protein(8)
```

We can use the useful utility function `sapply()` to help us "apply" our function over all the values 6 to 12.

```{r}
ans <- sapply(c(6:12), "generate_protein")
```

```{r}
cat(paste(">ID.", 6:12, sep="", "\n", ans, "\n" ))
```

> Q. Are any of these sequences unique in nature - i.e. never found in nature? We can search "refseq-protein" and look or 100% identity.

A BLASTp search into the Refseq_protein database did not show complete matches in nature.
